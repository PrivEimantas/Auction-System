import java.rmi.Remote;
import java.rmi.RemoteException;
import java.security.PublicKey;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.nio.file.Paths;
import javax.crypto.KeyGenerator;
import javax.crypto.SealedObject;
import javax.crypto.SecretKey;
import javax.crypto.Cipher;
import java.security.SecureRandom;
import java.io.FileOutputStream;
import java.io.PrintStream;
import java.nio.file.Files;
import javax.crypto.spec.SecretKeySpec;
import javax.crypto.spec.IvParameterSpec;
import java.util.ArrayList;
import java.security.Key;
import java.security.KeyPair;
import java.security.NoSuchAlgorithmException;
import java.security.PublicKey;
import java.security.PrivateKey;
import java.io.FileOutputStream;
import java.util.Base64;
import java.security.KeyPairGenerator;
import java.security.Signature;
import java.util.HashMap;
import java.util.Random;
import java.nio.charset.Charset;

import javax.crypto.SealedObject;

public interface ReplicaInterface extends Remote {
    public Integer register(String email, PublicKey pubkey) throws RemoteException;
    public AuctionItem getSpec(int userID,int itemID,String token) throws RemoteException;
    public ChallengeInfo challenge(int userID, String clientChallenge) throws RemoteException;
    public TokenInfo authenticate(int userID, byte signature[]) throws RemoteException; 
    public Integer newAuction(int userID, AuctionSaleItem item,String token) throws RemoteException;
    public AuctionItem[] listItems(int userID,String token) throws RemoteException;
    public AuctionResult closeAuction(int userID, int itemID,String token) throws RemoteException;
    public boolean bid(int userID, int itemID, int price,String token) throws RemoteException;
    public void setPrimary() throws RemoteException;
    public boolean getIfPrimary() throws RemoteException;
    public Boolean checkToken(String token,Integer userID) throws RemoteException;
    public void setBackUpVariables(ArrayList<String> UserEmailsI,AuctionItem[] AuctionedItemsI, Integer AuctionedItemsPositionI, HashMap<Integer,PrivateKey> privateKeyMapI, HashMap<Integer,String> challengeMapI,HashMap<Integer,PublicKey> publicKeyMapI,HashMap<Integer,TokenInfo> tokenMapI,PrivateKey serverPrivateKeyI,PublicKey serverPublicKeyI,int replicaAgeI) throws RemoteException;
    public ArrayList<String> getUserEmails() throws RemoteException;
    public AuctionItem[] getAuctionedItems() throws RemoteException;
    public Integer getAuctionedItemsPosition() throws RemoteException;
    public HashMap<Integer,PrivateKey> getPrivateKeyMap() throws RemoteException;
    public HashMap<Integer,String> getChallengeMap() throws RemoteException;
    public HashMap<Integer,PublicKey> getPublicKeyMap() throws RemoteException;
    public HashMap<Integer,TokenInfo> getTokenMap() throws RemoteException;
    public PrivateKey getServerPrivateKey() throws RemoteException;
    public PublicKey getServerPublicKey() throws RemoteException;
    public int getreplicaAge() throws RemoteException;
    public void BackupToOtherReplicas(ReplicaInterface replica, int type) throws RemoteException;
 }